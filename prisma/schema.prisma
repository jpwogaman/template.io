// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  // NOTE: When using postgresql, mysql or sqlserver, uncomment the @db.Text annotations in model Account below
  // Further reading:
  // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
  // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
  url      = env("DATABASE_URL")
}

model FileMetaData {
  fileName      String   @id
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  defaultColors String
  layouts       Layouts  @relation(fields: [fileName], references: [label], onDelete: Cascade)
  vepTemplate   String
  dawTemplate   String
}

model Layouts {
  label        String         @id
  title        String?
  layout       String?
  keys         LayoutKeys     @relation(fields: [label], references: [label], onDelete: Cascade)
  FileMetaData FileMetaData[]
}

model LayoutKeys {
  label       String    @id
  key         String
  show        Boolean
  className   String
  input       String?
  selectArray String
  layouts     Layouts[]
}

model FileItems {
  itemId        String               @id @default(cuid())
  locked        Boolean
  name          String
  channel       String?
  baseDelay     String?
  avgDelay      String?
  color         String
  fullRange     ItemsFullRanges[]
  artListToggle ItemsArtListTog[]
  artListSwitch ItemsArtListSwitch[]
  fadList       ItemsFadList[]
}

model ItemsFullRanges {
  rangeId                 String              @id @default(cuid())
  name                    String
  low                     String?
  high                    String?
  whiteKeysOnly           Boolean
  ItemsArtListTog         ItemsArtListTog?    @relation(fields: [itemsArtListTogArtId], references: [artId])
  itemsArtListTogArtId    String?
  ItemsArtListSwitch      ItemsArtListSwitch? @relation(fields: [itemsArtListSwitchArtId], references: [artId])
  itemsArtListSwitchArtId String?
  FileItems               FileItems?          @relation(fields: [fileItemsItemId], references: [itemId])
  fileItemsItemId         String?
}

model ItemsArtListTog {
  artId           String            @id @default(cuid())
  name            String?
  toggle          Boolean
  codeType        String?
  code            String?
  on              String?
  off             String?
  default         String?
  delay           String?
  changeType      String?
  ranges          ItemsFullRanges[]
  FileItems       FileItems?        @relation(fields: [fileItemsItemId], references: [itemId])
  fileItemsItemId String?
}

model ItemsArtListSwitch {
  artId           String            @id @default(cuid())
  name            String?
  toggle          Boolean
  codeType        String?
  code            String?
  on              String?
  off             String?
  default         Boolean?
  delay           String?
  changeType      String?
  ranges          ItemsFullRanges[]
  FileItems       FileItems?        @relation(fields: [fileItemsItemId], references: [itemId])
  fileItemsItemId String?
}

model ItemsFadList {
  fadId           String     @id @default(cuid())
  name            String?
  codeType        String?
  code            String?
  default         String?
  changeType      String?
  FileItems       FileItems? @relation(fields: [fileItemsItemId], references: [itemId])
  fileItemsItemId String?
}
